// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet
// From decision table
// "/data/github/asciidoctorj-decisiontable-extension/src/main/resources/ConditionToPlantUMLActivityDiagram.lfet"
// 26.09.2019 00:01
// 

// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.Dt.ini not found
// used LF-ET 2.1.5 (190905b) build in default

package org.uniqueck.asciidoctorj.extension.decisiontable.lfet;

public final class ConditionToPlantUMLActivityDiagramRules
{
    public final void execute(IConditionToPlantUMLActivityDiagram iface)
    {
 
    // Prolog Standard <----

        // Prolog Decision Table ---->
        // $$Package=org.uniqueck.asciidoctorj.extension.decisiontable.lfet
        // $$InterfaceTraceAfterRule=true
        // $$InterfaceRuleGroups = true
        // $$InterfaceName=IConditionToPlantUMLActivityDiagram
        // $$InterfaceRulesClassname=ConditionToPlantUMLActivityDiagramRules
        // Prolog Decision Table <----
        
        if ( iface.isConditionTypeIsOccurenceTable() )
        {
            if ( iface.isCurrentOccEntryIs() )
            {
                if ( iface.isHasMoreConditions() )
                {
                    // Rule R01 ---->
                    
                    iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 1);
                    iface.doElse();
                    
                    iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 1);
                    
                    // Rule R01 <----
                }
                else
                {
                    // Rule R02 ---->
                    
                    iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 2);
                    iface.doElse();
                    iface.doAddListOfActions();
                    
                    iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 2);
                    
                    // Rule R02 <----
                }
            }
            else
            {
                if ( iface.isCurrentOccEntryIsLast() )
                {
                    if ( iface.isHasMoreConditions() )
                    {
                        // Rule R03 ---->
                        
                        iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 3);
                        iface.doElseIfConditionTitleWithOccEntryAndLabelYes();
                        
                        iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 3);
                        
                        // Rule R03 <----
                    }
                    else
                    {
                        // Rule R04 ---->
                        
                        iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 4);
                        iface.doElseIfConditionTitleWithOccEntryAndLabelYes();
                        iface.doAddListOfActions();
                        
                        iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 4);
                        
                        // Rule R04 <----
                    }
                }
                else
                {
                    if ( iface.isCurrentOccEntryIsFirst() )
                    {
                        if ( iface.isHasMoreConditions() )
                        {
                            // Rule R05 ---->
                            
                            iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 5);
                            iface.doIfConditionTitleWithOccEntryAndLabelYes();
                            
                            iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 5);
                            
                            // Rule R05 <----
                        }
                        else
                        {
                            // Rule R06 ---->
                            
                            iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 6);
                            iface.doIfConditionTitleWithOccEntryAndLabelYes();
                            iface.doAddListOfActions();
                            
                            iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 6);
                            
                            // Rule R06 <----
                        }
                    }
                    else
                    {
                        if ( iface.isHasMoreConditions() )
                        {
                            // Rule R07 ---->
                            
                            iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 7);
                            iface.doElseIfConditionTitleWithOccEntryAndLabelYes();
                            
                            iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 7);
                            
                            // Rule R07 <----
                        }
                        else
                        {
                            // Rule R08 ---->
                            
                            iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 8);
                            iface.doElseIfConditionTitleWithOccEntryAndLabelYes();
                            iface.doAddListOfActions();
                            
                            iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 8);
                            
                            // Rule R08 <----
                        }
                    }
                }
            }
        }
        else
        {
            if ( iface.isConditionStateIs() )
            {
                if ( iface.isHasMoreConditions() )
                {
                    // Rule R09 ---->
                    
                    iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 9);
                    iface.doIfWithConditionTitleAndLabelYes();
                    
                    iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 9);
                    
                    // Rule R09 <----
                }
                else
                {
                    // Rule R10 ---->
                    
                    iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 10);
                    iface.doIfWithConditionTitleAndLabelYes();
                    iface.doAddListOfActions();
                    iface.doEndif();
                    
                    iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 10);
                    
                    // Rule R10 <----
                }
            }
            else
            {
                // Rule R11 ---->
                
                iface.doTrace("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 11);
                iface.doElseWithLabelNo();
                
                iface.doTraceAfterRule("ConditionToPlantUMLActivityDiagram", "20190926.000132", 11, 11);
                
                // Rule R11 <----
            }
        }
        
        // Epilog Standard ---->
        // profile LFET.Java.Epilog.Standard.Interface.Dt.ini not found
        // used LF-ET 2.1.5 (190905b) build in default

    }

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet

