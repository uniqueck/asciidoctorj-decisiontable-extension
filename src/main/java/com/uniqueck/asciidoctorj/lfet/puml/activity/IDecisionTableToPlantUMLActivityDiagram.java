// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet
// From decision table
// "/data/github/asciidoctorj-decisiontable-extension/src/main/resources/DecisionTableToPlantUMLActivityDiagram.lfet"
// 01.12.2019 00:25
// 
// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.ini not found
// used LF-ET 2.1.5 (190905b) build in default

package com.uniqueck.asciidoctorj.lfet.puml.activity;

public interface IDecisionTableToPlantUMLActivityDiagram
{
 
    // Prolog Standard <----

    // Prolog Decision Table ---->
    // $$Package=com.uniqueck.asciidoctorj.lfet.puml.activity
    // $$InterfaceTraceAfterRule=true
    // $$InterfaceRuleGroups = true
    // $$InterfaceName=IDecisionTableToPlantUMLActivityDiagram
    // $$InterfaceRulesClassname=DecisionTableToPlantUMLActivityDiagramRules
    // Prolog Decision Table <----
    
    /** 
     * <b>C02: condition type is occurence table</b>
     */
    public boolean isConditionTypeIsOccurenceTable();
    
    /** 
     * <b>C03: condition state is</b>
     */
    public boolean isConditionStateIs();
    
    /** 
     * <b>C04: current occ entry is *</b>
     */
    public boolean isCurrentOccEntryIs();
    
    /** 
     * <b>C05: current occ entry is last</b>
     */
    public boolean isCurrentOccEntryIsLast();
    
    /** 
     * <b>C06: current occ entry is first</b>
     */
    public boolean isCurrentOccEntryIsFirst();
    
    /** 
     * <b>C07: has more conditions</b>
     */
    public boolean isHasMoreConditions();
    
    /** 
     * <b>A01: get first condition</b>
     */
    public void doGetFirstCondition();
    
    /** 
     * <b>A02: if with condition title and label yes</b>
     */
    public void doIfWithConditionTitleAndLabelYes();
    
    /** 
     * <b>A03: else with label no</b>
     */
    public void doElseWithLabelNo();
    
    /** 
     * <b>A04: else</b>
     */
    public void doElse();
    
    /** 
     * <b>A05: else if condition title with occ entry and label yes</b>
     */
    public void doElseIfConditionTitleWithOccEntryAndLabelYes();
    
    /** 
     * <b>A06: if condition title with occ entry and label yes</b>
     */
    public void doIfConditionTitleWithOccEntryAndLabelYes();
    
    /** 
     * <b>A07: add list of actions</b>
     */
    public void doAddListOfActions();
    
    /** 
     * <b>A08: next rule</b>
     */
    public void doNextRule();
    
    /** 
     * <b>A09: endif</b>
     */
    public void doEndif();
    
    /** 
     * <b>A10: next condition</b>
     */
    public void doNextCondition();
    
    public void doTrace(java.lang.String dtName, java.lang.String version, int rules, int rule);
    
    public void doTraceAfterRule(java.lang.String dtName, java.lang.String version, int rules, int rule);

    // Epilog Standard ---->
    // profile LFET.Java.Epilog.Standard.Interface.ini not found
    // used LF-ET 2.1.5 (190905b) build in default

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet

