// *** WARNING: DO NOT MODIFY *** This is a generated Java source code! 
// 
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet
// From decision table
// "/data/github/asciidoctorj-decisiontable-extension/src/main/resources/DecisionTableToPlantUMLActivityDiagram.lfet"
// 22.09.2019 12:32
// 
// Prolog Standard ---->
// profile LFET.Java.Prolog.Standard.Interface.ini not found
// used LF-ET 2.1.5 (190905b) build in default

package com.uniqueck.asciidoctorj.lfet.puml.activity;

public interface IDecisionTableToPlantUMLActivityDiagram
{
 
    // Prolog Standard <----

    // Prolog Decision Table ---->
    // $$Package=org.uniqueck.asciidoctorj.extension.decisiontable.lfet
    // $$InterfaceTraceAfterRule=true
    // $$InterfaceRuleGroups = true
    // $$InterfaceName=IDecisionTableToPlantUMLActivityDiagram
    // $$InterfaceRulesClassname=DecisionTableToPlantUMLActivityDiagramRules
    // Prolog Decision Table <----
    
    /** 
     * <b>C02: last condition of rule</b>
     */
    public boolean isLastConditionOfRule();
    
    /** 
     * <b>C03: has more rules</b>
     */
    public boolean isHasMoreRules();
    
    /** 
     * <b>C04: has next rule same condition</b>
     */
    public boolean isHasNextRuleSameCondition();
    
    /** 
     * <b>A01: parse decision table</b>
     */
    public void doParseDecisionTable();
    
    /** 
     * <b>A02: add plantuml tag</b>
     */
    public void doAddPlantumlTag();
    
    /** 
     * <b>A03: add stop</b>
     */
    public void doAddStop();
    
    /** 
     * <b>A04: add 4 times hyphen</b>
     */
    public void doAdd4TimesHyphen();
    
    /** 
     * <b>A05: add title</b>
     */
    public void doAddTitle();
    
    /** 
     * <b>A06: add start</b>
     */
    public void doAddStart();
    
    /** 
     * <b>A07: get first rule</b>
     */
    public void doGetFirstRule();
    
    /** 
     * <b>A08: get first condition of first rule</b>
     */
    public void doGetFirstConditionOfFirstRule();
    
    /** 
     * <b>A09: add actions of rule</b>
     */
    public void doAddActionsOfRule();
    
    /** 
     * <b>A10: add endif</b>
     */
    public void doAddEndif();
    
    /** 
     * <b>A11: add else</b>
     */
    public void doAddElse();
    
    /** 
     * <b>A12: next rule</b>
     */
    public void doNextRule();
    
    public void doTrace(java.lang.String dtName, java.lang.String version, int rules, int rule);
    
    public void doTraceAfterRule(java.lang.String dtName, java.lang.String version, int rules, int rule);

    // Epilog Standard ---->
    // profile LFET.Java.Epilog.Standard.Interface.ini not found
    // used LF-ET 2.1.5 (190905b) build in default

}
 
// Epilog Standard <----

// End of generated Java source code
// Generated by LF-ET 2.1.5 (190905b), http://www.lohrfink.de/lfet

